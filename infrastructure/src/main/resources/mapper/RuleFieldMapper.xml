<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tongdun.kunpeng.api.dao.RuleFieldDao">
	<resultMap id="RuleFieldDOMap" type="RuleFieldDO">
		<result property="uuid" column="uuid" />
		<result property="sign" column="sign" />
		<result property="partnerCode" column="partner_code" />
		<result property="appName" column="app_name" />
		<result property="appType" column="app_type" />
		<result property="name" column="name" />
		<result property="displayName" column="display_name" />
		<result property="type" column="type" />
		<result property="gmtCreate" column="gmt_create" />
		<result property="createdBy" column="created_by" />
		<result property="gmtModified" column="gmt_modified" />
		<result property="modifiedBy" column="modified_by" />
		<result property="maxLength" column="max_length" />
		<result property="description" column="description" />
		<result property="necessary" column="necessary" />
		<result property="eventType" column="event_type" />
		<result property="signForRule" column="sign_for_rule" />
		<result property="signForVelocity" column="sign_for_velocity" />
		<result property="appDisplayName" column="appDisplayName" />
		<result property="partnerDisplayName" column="partnerDisplayName" />
		<result property="classDefinition" column="class_definition" />
		<result property="uniqueName" column="unique_name"/>
		<!--是否是根对象需求-->
		<result property="rootObject" column="root_object"/>
		<result property="attribute" column="attribute"/>
	</resultMap>

	<sql id="queryColumns">
		a.uuid,a.sign,a.partner_code,a.app_name,a.app_type,a.name,a.display_name,a.type,a.description,a.unique_name,
		a.max_length,a.necessary,a.event_type,a.sign_for_rule,a.gmt_create,a.sign_for_velocity,a.class_definition,a.root_object,a.attribute
	</sql>

	<sql id="likeQueryParams">
		<where>
			<if test="uuid != null">
				uuid = #{uuid}
			</if>
			<if test="name != null">
				AND name like #{name}
			</if>
			<if test="displayName != null">
				AND display_name like #{displayName}
			</if>
			<if test="type != null">
				AND type like #{type}
			</if>
			<if test="description != null">
				AND description like #{description}
			</if>
		</where>
	</sql>

	<select id="querySys" resultMap="RuleFieldDOMap" parameterType="RuleFieldDO">
		select
		<include refid="queryColumns" />
		from rule_field a
		<where>
			<if test="uuid != null">
				AND uuid = #{uuid}
			</if>
			<if test="partnerCode != null">
				AND partner_code = #{partnerCode}
			</if>
			<if test="appName != null">
				AND app_name = #{appName}
			</if>
			<if test="sign != null">
				AND sign = #{sign}
			</if>
			<if test="signForRule != null">
				AND sign_for_rule = #{signForRule}
			</if>
			<if test="eventType != null">
				AND (event_type is null or event_type = #{eventType})
			</if>
			<if test="appType != null">
				AND instr(app_type,#{appType}) > 0
			</if>
		</where>

	</select>

	<select id="queryByParams" resultMap="RuleFieldDOMap" parameterType="Map">
		select
		<include refid="queryColumns" />
		from rule_field a
		<where>
			<if test="eventType != null">
				AND event_type = #{eventType}
			</if>
			<if test="valiSysFieldNameEventType !=null">
				AND (event_type=#{valiSysFieldNameEventType} or event_type is null)
			</if>
			<if test="valiExtFieldNameEventType !=null">
				AND (event_type=#{valiExtFieldNameEventType} or event_type ="All")
			</if>
			<if test="sign != null">
				AND sign = #{sign}
			</if>
			<if test="name != null">
				AND `name` = #{name}
			</if>
			<if test="displayName !=null">
				AND display_name=#{displayName}
			</if>
			<if test="fieldName !=null and fieldDisplayName !=null">
				AND (`name`=#{fieldName} or display_name=#{fieldDisplayName})
			</if>
			<if test="partnerCode != null">
				AND partner_code = #{partnerCode}
			</if>
			<if test="appName != null">
				AND app_name = #{appName}
			</if>
			<if test="eventTypeOfNull != null">
				AND (event_type is null or event_type = #{eventTypeOfNull})
			</if>
			<if test="eventTypeExtend != null">
				AND (event_type = 'All' or event_type = #{eventTypeExtend})
			</if>
			<if test="eventTypeNotNull != null">
				AND (event_type is null or event_type = 'All' or event_type = #{eventTypeNotNull})
			</if>
			<if test="eventTypeNull != null">
				AND event_type is null
			</if>
			<if test="partnerCodeNull !=null">
				AND partner_code is null
			</if>
			<if test="appNameNull != null">
				AND app_name is null
			</if>
			<if test="signForRule != null">
				AND sign_for_rule = #{signForRule}
			</if>
			<if test="signForVelocity != null">
				AND sign_for_velocity = #{signForVelocity}
			</if>
			<if test="type != null">
				AND type = #{type}
			</if>
			<if test="exceptType != null">
				AND type != #{exceptType}
			</if>
			<if test="appType != null">
				AND instr(app_type,#{appType}) > 0
			</if>
			<if test="containUuid != null">
				AND class_definition like #{containUuid}
			</if>
			<if test="exceptUuid != null">
				AND uuid != #{exceptUuid}
			</if>
			<if test="attribute != null">
				AND attribute = #{attribute}
			</if>
			<if test="uniqueName != null">
				AND unique_name = #{uniqueName}
			</if>
		</where>
		order by gmt_create asc
	</select>

	<select id="queryCommonField" parameterType="Map" resultMap="RuleFieldDOMap">
		select
		<include refid="queryColumns" />
		from rule_field a
		where event_type is null and sign = 0 and instr(app_type,#{appType}) > 0
	</select>

	<select id="querySystemAndObjectField" parameterType="Map" resultMap="RuleFieldDOMap">
		select
		a.sign,a.name,a.display_name
		from rule_field a
		where sign in (0,2)
		<if test="eventType != null">
			AND (a.event_type is null or a.event_type = #{eventType})
		</if>
		<if test="appTypes != null">
			AND a.app_type in ${appTypes}
		</if>
	</select>


	<select id="querySysByPage" resultMap="RuleFieldDOMap" parameterType="Map">
		select
		<include refid="queryColumns" />
		from rule_field a
		<where>
			<if test="eventType != null">
				AND (a.event_type is null or a.event_type = #{eventType})
			</if>
			<if test="allEventType != null">
				AND a.event_type is null
			</if>
			<if test="sign != null">
				AND a.sign = #{sign}
			</if>
			<if test="name != null">
				AND a.name like CONCAT(CONCAT('%', #{name}), '%')
			</if>
			<if test="displayName != null">
				AND a.display_name like CONCAT(CONCAT('%', #{displayName}), '%')
			</if>
			<if test="type != null">
				AND a.type like #{type}
			</if>
			<if test="searchName != null">
				AND (a.name like #{searchName} or a.display_name like #{searchDName})
			</if>
			<if test="existUuids != null">
				AND a.uuid not in ${existUuids}
			</if>
			<if test="appTypes != null">
				AND a.app_type in ${appTypes}
			</if>
			<if test="disableArray != null">
				AND a.type != 'ARRAY'
			</if>
			<if test="eventTypeList != null">
				AND a.event_type in
				<foreach index="index" collection="eventTypeList" item="eventType" open="(" separator="," close=")">
					#{eventType}
				</foreach>
			</if>
			<if test="attribute != null">
				AND (a.attribute = #{attribute})
			</if>
			<if test="uniqueName != null">
				AND a.unique_name = #{uniqueName}
			</if>
		</where>
		order by a.gmt_create desc
	</select>

	<select id="countSysByPage" parameterType="map" resultType="int">
		select count(*) from rule_field a
		<where>
			<if test="eventType != null">
				AND (a.event_type is null or a.event_type = #{eventType})
			</if>
			<if test="allEventType != null">
				AND a.event_type is null
			</if>
			<if test="sign != null">
				AND a.sign = #{sign}
			</if>
			<if test="name != null">
				AND a.name like CONCAT(CONCAT('%', #{name}), '%')
			</if>
			<if test="displayName != null">
				AND a.display_name like CONCAT(CONCAT('%', #{displayName}), '%')
			</if>
			<if test="type != null">
				AND a.type like #{type}
			</if>
			<if test="searchName != null">
				AND (a.name like #{searchName} or a.display_name like #{searchDName})
			</if>
			<if test="existUuids != null">
				AND a.uuid not in ${existUuids}
			</if>
			<if test="appTypes != null">
				AND a.app_type in ${appTypes}
			</if>
			<if test="disableArray != null">
				AND a.type != 'ARRAY'
			</if>
			<if test="eventTypeList != null">
				AND a.event_type in
				<foreach index="index" collection="eventTypeList" item="eventType" open="(" separator="," close=")">
					#{eventType}
				</foreach>
			</if>
			<if test="attribute != null">
				AND (a.attribute = #{attribute})
			</if>
			<if test="uniqueName != null">
				AND a.unique_name = #{uniqueName}
			</if>
		</where>
	</select>

	<select id="queryExtendList" resultMap="RuleFieldDOMap" parameterType="Map">
		SELECT
		f.uuid,f.sign,f.partner_code,f.app_name,f.name,f.display_name,f.type,f.description,f.max_length,f.necessary,
		f.event_type,f.sign_for_rule,f.sign_for_velocity,f.gmt_create,f.class_definition,f.root_object,f.unique_name,f.attribute
		FROM rule_field f
		<where>
			f.sign=1
			<if test="partnerCode !=null">
				and f.partner_code=#{partnerCode}
			</if>
			<if test="appName !=null">
				and f.app_name= #{appName}
			</if>
			<if test="name != null">
				AND f.name like CONCAT(CONCAT('%', #{name}), '%')
			</if>
			<if test="displayName != null">
				AND f.display_name like CONCAT(CONCAT('%', #{displayName}), '%')
			</if>
			<if test="fieldType != null">
				AND f.type = #{fieldType}
			</if>
			<if test="typeList != null">
				AND f.type in
				<foreach index="index" collection="typeList" item="type" open="(" separator="," close=")">
					#{type}
				</foreach>
			</if>
			<if test="eventType != null">
				AND (event_type is null or event_type = 'All' or event_type = #{eventType})
			</if>
			<if test="eventTypeList != null">
				AND f.event_type in
				<foreach index="index" collection="eventTypeList" item="eventType" open="(" separator="," close=")">
					#{eventType}
				</foreach>
			</if>
			<if test="userAllAppName !=null">
				AND f.app_name in
				<foreach index="index" collection="appNameList" item="app" open="(" separator="," close=")">
					#{app}
				</foreach>
			</if>
			<if test="tdAllPartner !=null">
				AND f.partner_code in
				<foreach index="index" collection="policyList" item="policy" open="(" separator="," close=")">
					#{policy}
				</foreach>
			</if>
			<if test="holdPartnerList != null">
				AND f.partner_code in
				<foreach index="index" collection="holdPartnerList" item="partner" open="(" separator="," close=")">
					#{partner}
				</foreach>
			</if>
			<if test="policyIsNull">
				AND f.partner_code is null
			</if>
			<if test="attribute != null">
				AND f.attribute = #{attribute}
			</if>
			<if test="uniqueName != null">
				AND f.unique_name = #{uniqueName}
			</if>
		</where>
		order by f.gmt_create desc
	</select>

	<select id="queryExtendListCount" parameterType="Map" resultType="int" >
		select count(*) from ( SELECT
		f.uuid,f.sign,f.partner_code,f.app_name,f.name,f.display_name,f.type,f.description,f.max_length,
		f.necessary,f.event_type,f.sign_for_rule,f.sign_for_velocity,f.gmt_create,f.class_definition,f.root_object
		FROM rule_field f
		<where>
			f.sign=1
			<if test="partnerCode !=null">
				and f.partner_code=#{partnerCode}
			</if>
			<if test="appName !=null">
				and f.app_name= #{appName}
			</if>
			<if test="name != null">
				AND f.name like CONCAT(CONCAT('%', #{name}), '%')
			</if>
			<if test="displayName != null">
				AND f.display_name like CONCAT(CONCAT('%', #{displayName}), '%')
			</if>
			<if test="fieldType != null">
				AND f.type = #{fieldType}
			</if>
			<if test="typeList != null">
				AND f.type in
				<foreach index="index" collection="typeList" item="type" open="(" separator="," close=")">
					#{type}
				</foreach>
			</if>
			<if test="eventType != null">
				AND (event_type is null or event_type = 'All' or event_type = #{eventType})
			</if>
			<if test="eventTypeList != null">
				AND f.event_type in
				<foreach index="index" collection="eventTypeList" item="eventType" open="(" separator="," close=")">
					#{eventType}
				</foreach>
			</if>
			<if test="userAllAppName !=null">
				AND f.app_name in
				<foreach index="index" collection="appNameList" item="app" open="(" separator="," close=")">
					#{app}
				</foreach>
			</if>
			<if test="tdAllPartner !=null">
				AND f.partner_code in
				<foreach index="index" collection="policyList" item="policy" open="(" separator="," close=")">
					#{policy}
				</foreach>
			</if>
			<if test="holdPartnerList != null">
				AND f.partner_code in
				<foreach index="index" collection="holdPartnerList" item="partner" open="(" separator="," close=")">
					#{partner}
				</foreach>
			</if>
			<if test="policyIsNull">
				AND f.partner_code is null
			</if>
			<if test="attribute != null">
				AND (f.attribute = #{attribute})
			</if>
			<if test="uniqueName != null">
				AND f.unique_name = #{uniqueName}
			</if>
		</where>
		order by f.gmt_create desc ) as total
	</select>


	<select id="queryDecimalFields" resultMap="RuleFieldDOMap" parameterType="Map">
		select <include refid="queryColumns"/>
		from rule_field a
		where (event_type = #{eventType} or event_type = 'All' or event_type is null)
		and `type` = 'DOUBLE';
	</select>

	<select id="querySystemFieldsByEventType" resultMap="RuleFieldDOMap" parameterType="Map">
    	select `name`,`type`,`max_length`,`description`
    	from rule_field
    	where `sign`=0 AND (event_type is NULL OR event_type=#{eventType})
    </select>

	<select id="getAllRuleFields" resultMap="RuleFieldDOMap">
        SELECT * FROM rule_field;
    </select>

	<select id="queryByUuid" resultMap="RuleFieldDOMap" resultType="RuleFieldDO">
		SELECT * from rule_field where uuid = #{uuid}
	</select>

	<select id="queryByUuids" resultMap="RuleFieldDOMap" parameterType="List">
		SELECT * from rule_field where uuid in
		<foreach item="uuids" index="index" collection="list" open="(" separator="," close=")">
			#{uuids}
		</foreach>
	</select>

	<select id="queryFuzzyFields" resultMap="RuleFieldDOMap" parameterType="Map">
		SELECT <include refid="queryColumns"/> FROM rule_field a WHERE a.name LIKE #{name} AND a.name NOT LIKE '%Hash%'
	</select>

	<select id="queryIncludeFields" resultMap="RuleFieldDOMap">
		SELECT <include refid="queryColumns"/> FROM rule_field a WHERE (a.name LIKE '%qq%' OR a.name like '%Email%' OR a.name LIKE '%Mobile%' OR a.name LIKE '%Phone%' OR  a.name LIKE '%CardNumber%') AND a.name NOT LIKE '%Hash%'
	</select>

	<select id="queryUniqueName" parameterType="map" resultMap="RuleFieldDOMap">
		select
			partner_code, name, unique_name, sign
		from
		(	select
				partner_code, name, unique_name, sign,
				@rownum:=@rownum + 1,
				if(@rulename = concat(ifnull(partner_code,''),'^',name), @rank:=@rank + 1, @rank:=1) as rank,
				@rulename:= concat(ifnull(partner_code,''),'^',name)
			from
			(	select
				partner_code, name, unique_name, sign
				from
				rule_field
				<where>
					<if test="partnerCode != null">
						AND partner_code = #{partnerCode}
					</if>
					<if test="sign != null">
						AND sign = #{sign}
					</if>
					<if test="name != null">
						AND name like CONCAT(CONCAT('%', #{name}), '%')
					</if>
					<if test="uniqueName != null">
						AND unique_name like CONCAT(CONCAT('%', #{uniqueName}), '%')
					</if>
					<if test="uniqueIsNull != null">
						AND unique_name is NULL
					</if>
					<if test="uniqueIsNotNull != null">
						AND unique_name is not NULL
					</if>
					<if test="holdPartnerList != null">
						AND partner_code in
						<foreach index="index" collection="holdPartnerList" item="partner" open="(" separator="," close=")">
							#{partner}
						</foreach>
					</if>
				</where>
				order by partner_code, name, id desc
			) a,
			(select @rownum:=0, @rulename:=null, @rank:=0) b
		) t where rank=1 order by partner_code, name
		LIMIT #{offset}, #{pageSize}
	</select>

	<select id="countUniqueName" parameterType="map" resultType="int">
		SELECT count(*) FROM (SELECT partner_code, name FROM rule_field
		<where>
			<if test="partnerCode != null">
				AND partner_code = #{partnerCode}
			</if>
			<if test="sign != null">
				AND sign = #{sign}
			</if>
			<if test="name != null">
				AND name like CONCAT(CONCAT('%', #{name}), '%')
			</if>
			<if test="uniqueName != null">
				AND unique_name like CONCAT(CONCAT('%', #{uniqueName}), '%')
			</if>
			<if test="uniqueIsNull != null">
				AND unique_name is NULL
			</if>
			<if test="uniqueIsNotNull != null">
				AND unique_name is not NULL
			</if>
			<if test="holdPartnerList != null">
				AND partner_code in
				<foreach index="index" collection="holdPartnerList" item="partner" open="(" separator="," close=")">
					#{partner}
				</foreach>
			</if>
		</where>
		group by partner_code, name) as total
	</select>

	<update id="updateUniqueName" parameterType="map">
		UPDATE rule_field SET unique_name=#{uniqueName}
		<where>
			name = #{name}
			<if test="partnerCode != null"> AND partner_code = #{partnerCode}</if>
			<if test="sign != null">AND sign = #{sign}</if>
		</where>
	</update>

	<select id="querySameUniqueName" resultMap="RuleFieldDOMap" parameterType="map">
		SELECT name, unique_name, type, partner_code FROM rule_field
		<where>
			<if test="uniqueName != null"> AND unique_name=#{uniqueName}</if>
			<if test="partnerCode != null"> AND partner_code = #{partnerCode}</if>
			<if test="sign != null">AND sign = #{sign}</if>
			<if test="name != null"> AND name != #{name}</if>
		</where>
	</select>

	<select id="queryUniqueFields" parameterType="map" resultMap="RuleFieldDOMap">
		select
			sign, name, unique_name, type,event_type,app_type
		from
		(	select
				a.sign, a.name, a.unique_name, a.type,a.event_type,a.app_type,
				@rownum:=@rownum + 1,if(@rulename = a.name, @rank:=@rank + 1, @rank:=1) as rank,@rulename:=a.name
			from
			(	select
				sign, name, unique_name, type,event_type,app_type
				from
				rule_field
				<where>
					sign=#{sign}
					<if test="partnerCode != null">
						AND partner_code = #{partnerCode}
					</if>
					<if test="signForRule != null">
						AND sign_for_rule = #{signForRule}
					</if>
					<if test="signForVelocity != null">
						AND sign_for_velocity = #{signForVelocity}
					</if>
					<if test="exceptType != null">
						AND type != #{exceptType}
					</if>
					<if test="type != null">
						AND type = #{type}
					</if>
					<if test="exceptType != null">
						AND type != #{exceptType}
					</if>
				</where>
				order by name, id desc
			) a,
		  	(select @rownum:=0, @rulename:=null, @rank:=0) b
		) t where rank=1 order by t.name
	</select>

	<select id="queryExtendUniqueFields" resultMap="RuleFieldDOMap">
		select
		  sign, name, unique_name, type, partner_code
		from
		(	select
				sign, name, unique_name, type, partner_code,
				@rownum:=@rownum + 1,
				if(@rulename = concat(ifnull(partner_code,''),'^',name), @rank:=@rank + 1, @rank:=1) as rank,
				@rulename:= concat(ifnull(partner_code,''),'^',name)
			from
			(	select
				sign, name, unique_name, type, partner_code
				from
				rule_field
				where sign=1
				order by partner_code, name, id desc
			) a,
			(select @rownum:=0, @rulename:=null, @rank:=0) b
		) t where rank=1 order by partner_code, name
	</select>

	<select id="pageQueryAll" parameterType="map" resultMap="RuleFieldDOMap">
		select * FROM rule_field
		order by gmt_create DESC
		limit #{offset}, #{pageSize}
	</select>

	<select id="queryUniqueNameByName" resultType="String">
		select DISTINCT (unique_name) from rule_field where name = #{name} limit 1;
	</select>

	<select id="queryDisplayNameAndEventType" resultType="map">
		select name,display_name,event_type from rule_field where name in
		<foreach index="index" collection="list" item="name" open="(" separator="," close=")">
			#{name}
		</foreach>
	</select>
</mapper>
