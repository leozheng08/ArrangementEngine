<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans   http://www.springframework.org/schema/beans/spring-beans-3.2.xsd"
       default-autowire="byName">


    <!-- 引用公共zk配置中心,对应shutter文件为zookeeper.properties -->
    <!-- business.unit 为管理员分配值，请将这个配置放在应用自己的shutter配置文件中 -->
    <!--<bean id="zkConfigCenter-domainEvent" class="cn.fraudmetrix.module.kafka.util.ZKConfigCenter" init-method="init" destroy-method="close">-->
        <!--<property name="zkserver" value="${configcenter.endpoint}"/>-->
        <!--<property name="businessUnit" value="${business.unit}"/>-->
    <!--</bean>-->

    <bean id="domainEventNaiveConfigCenter" class="cn.fraudmetrix.module.kafka.util.NaiveConfigCenter" init-method="init" destroy-method="close">
        <property name="bootstrap" value="${configcenter.endpoint}"/>
        <!--influxdb监控集群名，可为空或不配置，不配置则客户端监控不可用-->
        <property name="influx" value=""/>
        <!-- 以下内容一般不需要启用，特殊情况请联系管理员商议 -->
        <!-- <property name="dc" value="${DC}"/> -->
        <!-- <property name="zookeeper" value="注意，若业务使用到了广播消息请增加这个配置 "/> -->
        <!-- <property name="retries" value="若业务对数据一致性要求较高请增大错误重试次数 "/> -->
        <!-- <property name="buffSize" value="若业务消息发送量较大需要增大缓冲区 "/> -->
        <!-- <property name="maxPollRecords" value="单批次拉取的消息数量限制 "/> -->
    </bean>



    <!-- domainEvent消费者-->
    <bean id="domainEventPoller" class="cn.fraudmetrix.module.kafka.consumer.ConcurrentPoller" init-method="init" destroy-method="close">
        <property name="configCenter" ref="domainEventNaiveConfigCenter"/>
        <property name="consumerName" value="${kafka.kunpeng.event.consumer.name:kunpeng_api_domain_event_consumer}" />
        <property name="mode" value="standard" />
        <property name="bizConsumers">
            <map>
                <entry key="${kafka.kunpeng.event.topic:kunpeng_admin_event}">
                    <ref bean="domainEventConsumer" />
                </entry>
            </map>
        </property>
    </bean>

    <bean id="domainEventConsumer" class="cn.tongdun.kunpeng.api.acl.impl.event.notify.kafka.DomainEventConsumer" />



    <!-- 注意必须保证每个producer实例中配置的topic列表属于同一个kafka集群,否则初始化检查将失败-->
    <!-- 若当前应用需要发送多个集群的topic请建立多个实例 -->
    <bean id="domainEventProducerService" class="cn.fraudmetrix.module.kafka.producer.SimpleProducer" init-method="init" destroy-method="close">
        <property name="topics">
            <list>
                <value>"${kafka.kunpeng.event.topic:kunpeng_admin_event}</value>
            </list>
        </property>
        <property name="configCenter" ref="domainEventNaiveConfigCenter"/>
    </bean>
</beans>